name: libcat

on: [push, pull_request]

env:
  BUILD_TYPE: Release
  CODECOV_TOKEN: "b55625e6-4e26-46d9-9941-e986b008586d" # from: https://codecov.io/gh/libcat/libcat

jobs:
  build:
    name: Test on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Clone GTest
        shell: bash
        working-directory: ${{runner.workspace}}
        run: git clone https://github.com/google/googletest.git

      - name: Create GTest Build Environment
        shell: bash
        working-directory: ${{runner.workspace}}/googletest
        run: cmake -E make_directory build

      - name: Configure GTest CMake
        shell: bash
        working-directory: ${{runner.workspace}}/googletest/build
        run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS=-std=c++11 -DBUILD_SHARED_LIBS=ON

      - name: Install GTest
        shell: bash
        working-directory: ${{runner.workspace}}/googletest/build
        run: sudo cmake --build . --config $BUILD_TYPE --target install

      - name: Checkout
        uses: actions/checkout@v1

      - name: Build Libcat and Run tests
        run: sudo mkdir -p build && cd build &&
          sudo cmake ..
          -DCODE_COVERAGE=ON
          -DCMAKE_C_FLAGS_DEBUG="-Werror"
          -DCMAKE_CXX_FLAGS_DEBUG="-Werror" &&
          sudo make -j4 &&
          sudo ./cat_tests

      - name: Run Coverage
        shell: bash
        run: sudo apt-get install lcov &&
          sudo lcov --directory . --capture --output-file coverage.info &&
          sudo lcov --remove coverage.info "${{runner.workspace}}/libcat/tests/*" "${{runner.workspace}}/libcat/deps/*" '/usr/*' --output-file coverage.info &&
          sudo lcov --list coverage.info &&
          sudo curl -s https://codecov.io/bash -o codecov.sh && sudo chmod +x codecov.sh && sudo ./codecov.sh -f coverage.info -t ${CODECOV_TOKEN}
